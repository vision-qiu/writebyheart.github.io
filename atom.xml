<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>左手写代码，右手写诗</title>
  
  <subtitle>我不介意孤独久一点，我只是不想变得微不足道</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.regularmisu.com/"/>
  <updated>2018-01-12T06:23:36.507Z</updated>
  <id>http://www.regularmisu.com/</id>
  
  <author>
    <name>DouDo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javaUpcast</title>
    <link href="http://www.regularmisu.com/2018/01/12/javaUpcast/"/>
    <id>http://www.regularmisu.com/2018/01/12/javaUpcast/</id>
    <published>2018-01-12T06:23:06.000Z</published>
    <updated>2018-01-12T06:23:36.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="向上转型"><a href="#向上转型" class="headerlink" title="向上转型"></a>向上转型</h2><h3 id="方法调用绑定"><a href="#方法调用绑定" class="headerlink" title="方法调用绑定"></a>方法调用绑定</h3><p>父类的引用指向子类的对象<br>同时丢失与父类不同的方法<br>对象的类型(引用的类型)是父类的类型<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Father f</span> = new Son();</span><br></pre></td></tr></table></figure></p><p>可理解为，创建一个Son类型的对象向上转型为父类型Father类型<br>此时<code>引用f</code>所调用的方法若在子类中有重写，则调用子类的方法</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;向上转型&quot;&gt;&lt;a href=&quot;#向上转型&quot; class=&quot;headerlink&quot; title=&quot;向上转型&quot;&gt;&lt;/a&gt;向上转型&lt;/h2&gt;&lt;h3 id=&quot;方法调用绑定&quot;&gt;&lt;a href=&quot;#方法调用绑定&quot; class=&quot;headerlink&quot; title=&quot;方法调用绑
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>现在的我，左手写代码，右手写诗</title>
    <link href="http://www.regularmisu.com/2018/01/11/%E7%8E%B0%E5%9C%A8%E7%9A%84%E6%88%91%EF%BC%8C%E5%B7%A6%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%8F%B3%E6%89%8B%E5%86%99%E8%AF%97/"/>
    <id>http://www.regularmisu.com/2018/01/11/现在的我，左手写代码，右手写诗/</id>
    <published>2018-01-11T15:44:31.000Z</published>
    <updated>2018-01-11T16:13:55.825Z</updated>
    
    <content type="html"><![CDATA[<p>现在的我，左手写代码，右手写诗</p><p>已经分不清是日子变了还是人变了，<br>也许是日子变了，<br>以前，总是倒头就睡，一觉睡到自然醒，<br>现在，为了养成一个好的生活习惯，设置了两个闹钟，一个提示起床，一个提示早点睡觉。<br><a id="more"></a><br>或许是因为一段经历告诉我有些习惯该改改了。<br><br></p><p>也许是人变了<br>每天夜里，戴上耳机，听你喜欢的歌，<br>想着，时间要是没有流走，世界还定格在那一刻，<br>我在我的人生画幅里第一次找到你的提笔处，那时我必定会换支画笔来描绘我的未来，一个有你的未来。<br>然后，描绘着描绘着就睡着了，很美的进入梦乡。<br>在梦里，偶尔让我实现一次这样的美梦，<br>这样的美梦总会让我醒来时对生活充满了期待，也充满了斗志。<br><br></p><p>对比过去和现在，<br>以前，身边的话题是各种游戏，电影……<br>现在，变成汽车，房子，结婚……<br>以前，感叹学业多，考试多，<br>现在，感叹房价涨的有多快。<br>以前，遇到喜欢的女孩子，敢鼓足勇气去表白，<br>现在，结束了一段情感，却迟迟不愿走出来。<br>以前，喜欢乱买东西，<br>现在，月初计算，这个月还了信用卡，交了房租，还剩多少够平时消费的。<br>以前，孤独了，至少还有同学、室友，<br>现在，除了工作时，都是一个人。<br><img src="/assets/blogImg/now.jpg" alt=""><br><br></p><p>回到现实，<br>工作和生活上，<br>少了一些轻狂，多了一点沉稳，<br>少了一些任性，多了一点包容，<br>少了一些软弱，多了一点坚强，<br>少了一些高傲，多了一点谦虚，<br>试着去忍耐一些挫折，不再抱怨诸多的不是。<br>只是,<br>有时候，明明很想哭，却强扭着笑，<br>有时候，明明很在乎，却装作无所谓，<br>有时候，明明很痛苦，却骗自己说很幸福，<br>忘不掉的，说已经忘了，却还是每天晚上都会想，<br>放不下的，说你我已是路人，却还是偶尔打开那个相册，<br>删了微信和QQ好友，<br>却又开通了微博，关注了网易云，<br>只是想知道你过的如何。<br><br></p><p>孤单的一个人在外面，<br>最暖心的就只剩与爸妈的通信了，<br>也不知从何时起，与爸妈的通信也发生了变化，<br>以前，通信内容往往是诉说，在外遇到挫折，生活费不够了，一条短信、一段电话寻求世上最可靠的帮助。<br>现在，通信内容变成了问候：爸，妈，最近可好？别太累着，记得按时休息，我这边一切都好。<br>其实心里也有苦楚，只是说不出，怕他们担心罢了。<br>偶尔那头传来渴望的话语：儿子，什么时候找个女朋友啊？<br>我却只能说：社会变了，现在婚龄变高了，我现在还年轻，你们别急，迟早会有的……此时内心更多的只有愧疚，因为时常听他们说道，你那个同学结婚了，这个同学前不久刚刚生娃了。<br>内心也是许着：不会让你们等太久，以后要让你们过上舒舒服服的日子。<br><br></p><p>现在的我，<br>一个人吃饭，一个人看电影，一个人承担压力，<br>累了就想一些美好的。<br><img src="/assets/blogImg/CatWithPeople.jfif" alt=""></p><p>现在的我，<br>每天早上，带着你给我的温暖微笑着跟见到的每一个人说：你好！<br><br><br>现在的我，<br>过的很好，生活规律，偶尔想家，偶尔想你。</p><p><br><br><br><br><br><br><br><br>读《我今年，二十七八岁》有感而发</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在的我，左手写代码，右手写诗&lt;/p&gt;
&lt;p&gt;已经分不清是日子变了还是人变了，&lt;br&gt;也许是日子变了，&lt;br&gt;以前，总是倒头就睡，一觉睡到自然醒，&lt;br&gt;现在，为了养成一个好的生活习惯，设置了两个闹钟，一个提示起床，一个提示早点睡觉。&lt;br&gt;
    
    </summary>
    
      <category term="Essay" scheme="http://www.regularmisu.com/categories/Essay/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Github Page搭建个人博客</title>
    <link href="http://www.regularmisu.com/2018/01/02/set-up-personalBlog/"/>
    <id>http://www.regularmisu.com/2018/01/02/set-up-personalBlog/</id>
    <published>2018-01-02T06:12:31.000Z</published>
    <updated>2018-01-11T10:22:14.924Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前两天刚刚搭建好这个博客，想着趁热乎，脑中还记得一些搭建时需要在意的注意点啥的。于是，便有了下文。只是希望能够给以后想自己搭建博客的人一点微不足道的帮助。有什么不对的地方可以留言告诉我。</p><a id="more"></a><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a><font color="#0099ff">准备工作</font></h2><p>此教程中的博客是在Windows系统下搭建的，git用的是命令行而非图形化处理界面</p><ul><li>git（必需）</li><li>node.js （必需）</li><li>Github账号（必需）</li><li>markdown编辑器（最好有一个，以后也方便写博客）</li><li>域名  </li></ul><h2 id="git下载并安装"><a href="#git下载并安装" class="headerlink" title="git下载并安装"></a><font color="#0099ff">git下载并安装</font></h2><p>作用：将本地hexo代码提交到GitHub上，（关于git，不了解的可以参考<a href="http://blog.csdn.net/v123411739/article/details/44071059/" target="_blank" rel="noopener">史上最全github使用方法：github入门到精通</a>也可自行搜索获或者去<a href="https://git-scm.com/" target="_blank" rel="noopener">官网</a>看看）<br><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">下载</a> 好相对应的git版本并安装，安装时按默认选项安装即可</p><h2 id="node-js下载并安装"><a href="#node-js下载并安装" class="headerlink" title="node.js下载并安装"></a><font color="#0099ff">node.js下载并安装</font></h2><p>同样，<a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载</a> 好，安装时同样可按默认选项安装即可</p><blockquote><p>注：以上需要安装的步骤，若安装时出现问题请自行查询相关解决办法，此处不再详细说明</p></blockquote><h2 id="Github账号"><a href="#Github账号" class="headerlink" title="Github账号"></a><font color="#0099ff">Github账号</font></h2><p>申请GitHub之后即可建立个人远程库，用来做个人博客的服务器，以及生成GitHub域名，<a href="https://pages.github.com/" target="_blank" rel="noopener">可以参考此</a><br>申请GitHub账号我就不多说了</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a><font color="#0099ff">安装Hexo</font></h2><p>Hexo使用可以参考 <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener"><code>Hexo document</code></a></p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。（$为git命令行自带不需手动输入，只需输入$后面的，以下所有命令皆是）</p></blockquote><p><strong>①</strong> 鼠标右击桌面或其他任意地方，选择Git Bash Here，使用以下命令进行安装hexo<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-cli -g</span></span><br></pre></td></tr></table></figure></p><p><strong>②</strong> 创建放置博客源码的文件夹：hexo文件夹<br>在自己想要的位置创建文件夹，建议放在英文文件夹目录下。如：E:\hexo</p><p><strong>③</strong> 打开刚刚新建的hexo文件夹（此时文件夹需为空），右击选择Git Bash Here执行以下命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init</span></span><br></pre></td></tr></table></figure></p><p>回车之后Hexo会自动在该文件夹下下载搭建网站所需的文件</p><p><strong>④</strong> 安装依赖包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br></pre></td></tr></table></figure></p><p><strong>⑤</strong> 生成静态文件<br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span> (或者输入 hexo g)</span><br></pre></td></tr></table></figure></p><p><strong>⑥</strong> 启动本地服务器<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo<span class="built_in"> server </span>(或者输入 hexo s)</span><br></pre></td></tr></table></figure></p><p>默认情况下，访问地址为：<code>http://localhost:4000/</code><br>此时git命令行显示如下：<br><img src="/assets/blogImg/hexo s.png" alt=""><br>由提示可以看出，hexo服务器已启动，并提示你按<code>Ctrl + C</code>来停止服务器</p><p>好了，运行到此，其实我们已经可以看到我们搭建的博客的雏形了，打开浏览器，在地址栏输入<code>http://localhost:4000/</code>在正常操作的情况下，此时你应该可以看到一个类似下面的图片的界面。这就是刚刚在本地建立的博客，别人无法访问。<br>页面如下：<br><img src="/assets/blogImg/first.png" alt=""></p><p>这边我是将我现在的博客主题切换为默认主题时的样子，所以title和subtitle是被我修改过的，这些可在E:\hexo目录下的_config.yml配置文件中修改，进去找到相应的字段在其后面添加你的文字即可（<code>:</code>后同样需要加空格）</p><h2 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a><font color="#0099ff">注册Github账号</font></h2><p>已有Github账号跳过此步骤，点击<a href="https://github.com/" target="_blank" rel="noopener">github</a>进入注册页面</p><h2 id="创建repository"><a href="#创建repository" class="headerlink" title="创建repository"></a><font color="#0099ff">创建repository</font></h2><p>repository作为一个远程的仓储室，即一个远程仓库，用来放置你上传的源码<br><img src="/assets/blogImg/repository1.png" alt="">  </p><p>按照途中数字顺序进行操作，第③步时，blog为你想取的repository名，<code>.github.io</code>别忘了加上，后面设置需要<br><img src="/assets/blogImg/repository2.png" alt=""></p><h2 id="部署本地文件到github"><a href="#部署本地文件到github" class="headerlink" title="部署本地文件到github"></a><font color="#0099ff">部署本地文件到github</font></h2><p>远程仓库和本地仓库都创建好了，剩下的就是建立将本地代码提交到远程仓库的路径了，如此才能连接本地仓库和远程github提供的仓库。打开<code>E:\hexo</code>（刚刚新建的生成本地博客代码的文件夹）下的<code>_config.yml</code>文件，因为是mackdown文件，为了编辑方便，可以下载一个<a href="https://notepad-plus-plus.org/download/v7.5.4.html" target="_blank" rel="noopener">Notepad++</a>,<br>一般是在_config.yml最下方，添加如下配置<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repository</span>: <span class="attribute">http</span>:<span class="comment">//github.com/username/blog.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></p><blockquote><p>每个<code>:</code>后必须带一个空格<br>repository后的<code>username</code>为GitHub用户名，第二个为之前创建的Repository的名字，记得修改为自己的。上面提到创建repository时填写Repository name要加个<code>.github.io</code>我一开始没加，自然这边也就没加，导致部署到GitHub page上后打开我的远程博客时报404，折腾了一会儿，在这边添加了这个之后问题解决，这还是因为对github不够了解，惭愧。</p></blockquote><p>配置好之后执行以下代码<br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span> (或者输入 hexo g)</span><br><span class="line">$ hexo deploy (或者输入 hexo d)</span><br></pre></td></tr></table></figure></p><p>上面两行也可简写为<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g -d</span></span><br></pre></td></tr></table></figure></p><p>到目前，博客已经算是搭建完成了，而且也已经发布到GitHub上，别人也可以访问得到了。在浏览器上访问<code>http:\\username.github.io</code>就能看到自己的博客了。</p><blockquote><p>tips：1.这边的username并非我的GitHub帐户名，我只是举个例子，你们将username改为你自己的GitHub帐户名即可<br>2.每次部署到GitHub上之后，可能要过一会儿才能显示最新的页面。即：输入完<code>hexo deploy</code>之后。建议一开始调试页面的时候在本地服务器上操作，可节省时间。  </p></blockquote><p><br></p><blockquote><p>提示：每次部署前最好先clean<br>步骤如下  </p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo generate</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo deploy</span></span><br></pre></td></tr></table></figure><h2 id="两个配置文件及主题更改"><a href="#两个配置文件及主题更改" class="headerlink" title="两个配置文件及主题更改"></a><font color="#0099ff">两个配置文件及主题更改</font></h2><p>在本地博客目录下有两个配置文件，分别是</p><ul><li>E:\hexo_config.yml</li><li>E:\hexo\themes\landscape_config.yml  </li></ul><p>第二个为博客主题的配置文件，若想换成自己喜欢的主题可以去网上找一些主题（这里推荐几个不错的<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">主题</a>），把主题源码下载下来，然后将整个文件夹粘贴到<code>E:\hexo\themes</code>下，然后编辑第一个配置文件，找到<code>theme:</code>字段，将后面的landscape改为刚刚添加的主题文件夹名<br>第一个配置文件中第一部分，Site部分，需要修改为你个人的信息，其他没提到的暂时可以使用默认的，若想修改的更加个性化可以自己再研究，可以参考<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo文档</a>，博主觉得这些已经够用了，找个喜欢的主题就差不多了，所以也没有深究。<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Site<span class="comment">//这下面的几项配置都很简单，基本都能明白什么意思及用途</span></span></span><br><span class="line"><span class="symbol">title:</span> Chillax blog <span class="comment">//博客名</span></span><br><span class="line"><span class="symbol">subtitle:</span> Goals determine what you are going to be<span class="comment">//副标题</span></span><br><span class="line"><span class="symbol">description:</span> Goals determine what you are going to be <span class="comment">//用于搜索，没有直观表现</span></span><br><span class="line"><span class="symbol">author:</span> DouDo<span class="comment">//作者</span></span><br><span class="line"><span class="symbol">language:</span> zh-CN<span class="comment">//语言</span></span><br><span class="line"><span class="symbol">timezone:</span> <span class="comment">//时区，此处不填写，hexo会以你目前电脑的时区为默认值</span></span><br></pre></td></tr></table></figure></p><p>第二个配置文件是根据主题而来，找到你喜欢的主题时，仔细看一下相关文档进行相应的修改即可。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a><font color="#0099ff">最后</font></h2><p>原本打算也整理出评论添加和域名绑定的相关文档，评论区引用有好多，目前比较推荐使用的是：Disqus和gitment,评论添加也很简单，我这边只稍微说一点，先推荐一个<a href="https://www.jianshu.com/p/c4f65ebe23ad" target="_blank" rel="noopener">教程</a></p><blockquote><p>他里面具体到添加多说代码块儿，你们添加时注意看下你们所找的主题，有的主题里可能已经配置好了，只需要你修改下配置文件里参数值。</p></blockquote><p>至于域名，其实是可有可无的，自己有个域名可能会显得更加高大上些，这当中其实没多少要配置的，主要就是购买域名和域名解析，网上的域名绑定都大同小异，很容易搞定。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>其实，一开始想写个很详细的教程，后来又想，网上已经有很多教程了，总结来总结去也就这些。虽然本人也是第一次建博客，不过搭建时也没遇到啥大的坑，比较顺利。所以，觉得没啥好讲的。写它也是因为自己在博客初篇中提到以后会写个搭建教程，自己挖的坑哭着也要填完T.T<br>就当练一练mackdown文本编辑吧。<br>有错误欢迎指出！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前两天刚刚搭建好这个博客，想着趁热乎，脑中还记得一些搭建时需要在意的注意点啥的。于是，便有了下文。只是希望能够给以后想自己搭建博客的人一点微不足道的帮助。有什么不对的地方可以留言告诉我。&lt;/p&gt;
    
    </summary>
    
      <category term="Note" scheme="http://www.regularmisu.com/categories/Note/"/>
    
    
      <category term="hexo" scheme="http://www.regularmisu.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>开幕</title>
    <link href="http://www.regularmisu.com/2017/12/29/%E5%BC%80%E5%B9%95/"/>
    <id>http://www.regularmisu.com/2017/12/29/开幕/</id>
    <published>2017-12-29T08:33:13.000Z</published>
    <updated>2018-01-11T10:21:55.801Z</updated>
    
    <content type="html"><![CDATA[<p>在朋友<a href="https://github.com/buyongfeng521" target="_blank" rel="noopener">buyongfeng</a>（下文中的大哥）的推荐和帮助下，折腾了一天多终于算是搭建好了。以后或许可能会换Theme，又或者懒得动自己选择性的优化一下页面吧。</p><a id="more"></a><p>由于我是一枚java后端猿，所以我对页面没改动什么，也是惭愧。之后我会整理出一篇搭建此博客的流程，希望可以给以后想搭建个人博客的朋友一点小小的帮助。</p><blockquote><p>建博客的念头起源  </p></blockquote><p>我只是一个在csdn上有个个人账号的java后端小白，原本打算就在csdn上好好弄个博客。然而这段时间经常看别人博客，在众多IT前辈的博客里畅游，寻找我想要的答案，从没有想过自己也有个属于自己个人的博客。就在前天晚上下班之前，看到我大哥（我的朋友也是同事更是前辈）的github主页，他也是好久没有打理了，然后找到他的博客，看到一篇《<a href="http://blog.step520.com/2016/12/05/Hexo%E5%9C%A8GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Hexo在GitHub搭建博客</a>》这才让我也想搭建一个属于自己的博客。</p><blockquote><p>感想  </p></blockquote><p>当我第一次看到我在GitHub page上搭建出来的博客雏形的时候，心里有种说不出来的感觉，在我购买了域名之后，我的博客的地址是以www开头com结尾的心里又是另一番情绪。都说：一入编程深似海，从此妹子是路人。此时的心情仅次于你拥有一个女朋友的时候，所以你懂的。  </p><p>作为一个90后，用过空间，微博，微信，人人等等，每一款都可以有一块属于自己的小天地，可以记录自己生活中的点点滴滴。而这个不一样，他是一块完全属于我自己的天地，作为码农，我希望他一天天的壮大，他的壮大代表着我的壮大，我会用我接下来的人生来点缀他，让他变得博学多才，五彩斑斓。  </p><p>最重要的是，我是一个跨专业转行过来的，个人对IT行业也是非常的感兴趣，这让我以后可以在我那些老同学面前装X，哈哈。（开个玩笑）</p><p>^ _ ^</p><blockquote><p>感谢  </p></blockquote><p>最后<br>感谢我亦师亦友的大哥<br>感些模板提供者<a href="https://github.com/MOxFIVE" target="_blank" rel="noopener">MOxFIVE</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在朋友&lt;a href=&quot;https://github.com/buyongfeng521&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buyongfeng&lt;/a&gt;（下文中的大哥）的推荐和帮助下，折腾了一天多终于算是搭建好了。以后或许可能会换Theme，又或者懒得动自己选择性的优化一下页面吧。&lt;/p&gt;
    
    </summary>
    
      <category term="Essay" scheme="http://www.regularmisu.com/categories/Essay/"/>
    
    
  </entry>
  
</feed>
